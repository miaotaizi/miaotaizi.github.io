<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mr Miao</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-10-07T14:13:10.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>miaotaizi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>重写FOSUserBundle的默认表单</title>
    <link href="http://yoursite.com/2016/10/07/fosuserbundle-overriding-default-forms/"/>
    <id>http://yoursite.com/2016/10/07/fosuserbundle-overriding-default-forms/</id>
    <published>2016-10-07T14:07:41.000Z</published>
    <updated>2016-10-07T14:13:10.000Z</updated>
    
    <content type="html">&lt;h4 id=&quot;重写表单类型&quot;&gt;&lt;a href=&quot;#重写表单类型&quot; class=&quot;headerlink&quot; title=&quot;重写表单类型&quot;&gt;&lt;/a&gt;重写表单类型&lt;/h4&gt;&lt;p&gt;FOSUserBundle为新用户注册, 更新用户信息, 修改密码等功能封装了默认的表单. 这些表单能很好的作用在默认的类以及控制器上. 但假如你想在你的&lt;code&gt;User&lt;/code&gt;类里面添加更多的属性, 或者想在注册表单里面添加一些选项时, 就得去修改默认的表单.&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;假设你创建了一个&lt;code&gt;AppBundle\Entity\User&lt;/code&gt;的用户类. 在这个类里面, 你必须添加一个&lt;code&gt;name&lt;/code&gt;属性跟用户名以及邮箱地址同时保存下来.此时, 当一个用户在你的网站注册时, 他必须填写他们的姓名以及用户名和邮箱, 密码. 下面的代码是添加了&lt;code&gt;$name&lt;/code&gt;属性以及验证的例子.&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// src/AppBundle/Entity/User.php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;FOS&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;UserBundle&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;Model&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BaseUser&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Doctrine&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;ORM&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;Mapping&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ORM&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Symfony&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;Component&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;Validator&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;Constraints&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Assert&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BaseUser&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@ORM&lt;/span&gt;\Id&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@ORM&lt;/span&gt;\Column(type=&quot;integer&quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@ORM&lt;/span&gt;\GeneratedValue(strategy=&quot;AUTO&quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; $id;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@ORM&lt;/span&gt;\Column(type=&quot;string&quot;, length=255)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@Assert&lt;/span&gt;\NotBlank(message=&quot;Please enter your name.&quot;, groups=&amp;#123;&quot;Registration&quot;, &quot;Profile&quot;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@Assert&lt;/span&gt;\Length(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *     min=3,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *     max=255,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *     minMessage=&quot;The name is too short.&quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *     maxMessage=&quot;The name is too long.&quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *     groups=&amp;#123;&quot;Registration&quot;, &quot;Profile&quot;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; $name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;默认情况下, Registration验证组是在一个新用户注册时被使用的.  请确保将你的name属性添加到了命名为Registration的验证组, 除非你在配置文件中修改了这个值.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果你尝试使用默认的表单进行注册, 你会发现新添加的&lt;code&gt;name&lt;/code&gt;属性并不在表单中. 你需要通过创建一个自定义表单类型并且进行配置, 才能使表单正常运作.&lt;/p&gt;
&lt;p&gt;第一步是在你的bundle中添加一个新的表单类型. 下面这个类继承自FOSUserBundle的&lt;code&gt;fos_user_registration&lt;/code&gt;类型表单, 并且添加了自定义的&lt;code&gt;name&lt;/code&gt;字段.&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// src/AppBundle/Form/RegistrationType.php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AppBundle&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;Form&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Symfony&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;Component&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;Form&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;AbstractType&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Symfony&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;Component&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;Form&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;FormBuilderInterface&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;RegistrationType&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AbstractType&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;buildForm&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(FormBuilderInterface $builder, array $options)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $builder-&amp;gt;add(&lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getParent&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;FOS\UserBundle\Form\Type\RegistrationFormType&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Or for Symfony &amp;lt; 2.8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// return &#39;fos_user_registration&#39;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getBlockPrefix&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;app_user_registration&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// For Symfony 2.x&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; $this-&amp;gt;getBlockPrefix();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你不想复用FOSUserBundle提供的默认字段, 则可以忽略&lt;code&gt;getParent&lt;/code&gt;方法, 自己添加所有的字段.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;你已经创建好了自定义表单类型, 接着就是将它定义为一个服务并且添加相应的tag. tag的&lt;code&gt;name&lt;/code&gt;值必须为&lt;code&gt;form.type&lt;/code&gt;并且&lt;code&gt;alias&lt;/code&gt;值必须与在添加的表单类型中的&lt;code&gt;getName&lt;/code&gt;方法返回的字符串相同. &lt;code&gt;alias&lt;/code&gt;是要告诉FOSUserBundle使用哪个自定义表单类型的名称.&lt;br&gt;下面是你的表单服务的配置示例:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# app/config/services.yml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;services:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    app.form.registration:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        class: AppBundle\Form\RegistrationType&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        tags:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            - &amp;#123; name: form.type, alias: app_user_registration &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最后你需要更新你的FOSUserBundle的配置信息, 以便让FOSUserBundle知道要使用哪个表单来替换默认的表单. 下面是替换注册表单的示例配置.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# app/config/config.yml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fos_user:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    registration:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        form:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            type: AppBundle\Form\RegistrationType&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            # if you are using Symfony &amp;lt; 2.8 you should use the type name instead&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            # type: app_user_registration&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意在配置文件中是如何使用你的表单类型服务配置中tag的&lt;code&gt;alias&lt;/code&gt;值来告诉FOSUserBundle使用你的自定义表单的.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你需要在处理表单的时候添加一些逻辑, 你可以添加一个监听者&lt;a href=&quot;/2016/10/01/fosuserbundle-hooking-into-the-controller&quot;&gt;挂载到控制器&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;重写表单类型&quot;&gt;&lt;a href=&quot;#重写表单类型&quot; class=&quot;headerlink&quot; title=&quot;重写表单类型&quot;&gt;&lt;/a&gt;重写表单类型&lt;/h4&gt;&lt;p&gt;FOSUserBundle为新用户注册, 更新用户信息, 修改密码等功能封装了默认的表单. 这些表单能很好的作用在默认的类以及控制器上. 但假如你想在你的&lt;code&gt;User&lt;/code&gt;类里面添加更多的属性, 或者想在注册表单里面添加一些选项时, 就得去修改默认的表单.&lt;/p&gt;
    
    </summary>
    
      <category term="外文翻译" scheme="http://yoursite.com/categories/%E5%A4%96%E6%96%87%E7%BF%BB%E8%AF%91/"/>
    
    
      <category term="翻译" scheme="http://yoursite.com/tags/%E7%BF%BB%E8%AF%91/"/>
    
      <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
      <category term="Symfony" scheme="http://yoursite.com/tags/Symfony/"/>
    
      <category term="FOSUserBundle" scheme="http://yoursite.com/tags/FOSUserBundle/"/>
    
  </entry>
  
  <entry>
    <title>Symfony框架之重写FOSUserBundle的默认控制器</title>
    <link href="http://yoursite.com/2016/10/04/fosuserbundle-overriding-default-controllers/"/>
    <id>http://yoursite.com/2016/10/04/fosuserbundle-overriding-default-controllers/</id>
    <published>2016-10-04T13:49:41.000Z</published>
    <updated>2016-10-04T13:54:43.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;原文地址&lt;a href=&quot;http://symfony.com/doc/current/bundles/FOSUserBundle/overriding_controllers.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://symfony.com/doc/current/bundles/FOSUserBundle/overriding_controllers.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;FOSUserBundle中默认的控制器提供了大量的功能来满足日常使用. 但在你的应用中, 通常需要继承这些功能, 并且在里面添加你自己的业务逻辑.&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;重写控制器需要复制所有的action逻辑. 大多数情况下使用事件来实现功能会更简单一些. 只有在没有其他办法的情况下才会考虑重写控制器.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;重写控制器的第一步是创建一个继承FOSUserBundle的子bundle. 下面的代码片段定义了一个名为&lt;code&gt;AcmeUserBundle&lt;/code&gt;的继承自FOSUserBundle的子bundle.&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// src/Acme/UserBundle/AcmeUserBundle.php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Acme&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;UserBundle&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Symfony&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;Component&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;HttpKernel&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;Bundle&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;Bundle&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AcmeUserBundle&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Bundle&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getParent&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;FOSUserBundle&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Symfony框架只中每个bundle只能有一个子bundle. 这意味着你不能再创建另外一个继承自FOSUserBundle的子bundle.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;现在你已经创建了一个新的子bundle, 你可以创建一个与你想重写的控制器路径以及名称相同的控制器类. 在这个例子中,通过扩展FOSUserBundle中的&lt;code&gt;RegistrationController&lt;/code&gt;类来实现对&lt;code&gt;RegistrationController&lt;/code&gt;的方法中额外的功能的重写.&lt;br&gt;下面的例子中重写了&lt;code&gt;registerAction&lt;/code&gt;方法. 它使用了base 控制器的代码并且添加了新用户登录的逻辑.&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// src/Acme/UserBundle/Controller/RegistrationController.php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Acme&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;UserBundle&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;Controller&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Symfony&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;Component&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;HttpFoundation&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;RedirectResponse&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;FOS&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;UserBundle&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;Controller&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;RegistrationController&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BaseController&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Symfony&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;Component&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;HttpFoundation&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;Request&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;RegistrationController&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BaseController&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;registerAction&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Request $request)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $form = $this-&amp;gt;container-&amp;gt;get(&lt;span class=&quot;string&quot;&gt;&#39;fos_user.registration.form&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $formHandler = $this-&amp;gt;container-&amp;gt;get(&lt;span class=&quot;string&quot;&gt;&#39;fos_user.registration.form.handler&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $confirmationEnabled = $this-&amp;gt;container-&amp;gt;getParameter(&lt;span class=&quot;string&quot;&gt;&#39;fos_user.registration.confirmation.enabled&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $process = $formHandler-&amp;gt;process($confirmationEnabled);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ($process) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            $user = $form-&amp;gt;getData();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;/*****************************************************&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             * Add new functionality (e.g. log the registration) *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             *****************************************************/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            $this-&amp;gt;container-&amp;gt;get(&lt;span class=&quot;string&quot;&gt;&#39;logger&#39;&lt;/span&gt;)-&amp;gt;info(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                sprintf(&lt;span class=&quot;string&quot;&gt;&#39;New user registration: %s&#39;&lt;/span&gt;, $user)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ($confirmationEnabled) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                $this-&amp;gt;container-&amp;gt;get(&lt;span class=&quot;string&quot;&gt;&#39;session&#39;&lt;/span&gt;)-&amp;gt;set(&lt;span class=&quot;string&quot;&gt;&#39;fos_user_send_confirmation_email/email&#39;&lt;/span&gt;, $user-&amp;gt;getEmail());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                $route = &lt;span class=&quot;string&quot;&gt;&#39;fos_user_registration_check_email&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                $this-&amp;gt;authenticateUser($user);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                $route = &lt;span class=&quot;string&quot;&gt;&#39;fos_user_registration_confirmed&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            $this-&amp;gt;setFlash(&lt;span class=&quot;string&quot;&gt;&#39;fos_user_success&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;registration.flash.user_created&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            $url = $this-&amp;gt;container-&amp;gt;get(&lt;span class=&quot;string&quot;&gt;&#39;router&#39;&lt;/span&gt;)-&amp;gt;generate($route);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; RedirectResponse($url);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; $this-&amp;gt;container-&amp;gt;get(&lt;span class=&quot;string&quot;&gt;&#39;templating&#39;&lt;/span&gt;)-&amp;gt;renderResponse(&lt;span class=&quot;string&quot;&gt;&#39;FOSUserBundle:Registration:register.html.twig&#39;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;array&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&#39;form&#39;&lt;/span&gt; =&amp;gt; $form-&amp;gt;createView(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;如果在你想重写时不继承FOSUserBundle控制器类而是继承自FrameworkBundle提供的容器或者控制器, 那你就必须实现FOSUserBundle 的控制器所有的方法.&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;原文地址&lt;a href=&quot;http://symfony.com/doc/current/bundles/FOSUserBundle/overriding_controllers.html&quot;&gt;http://symfony.com/doc/current/bundles/FOSUserBundle/overriding_controllers.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;FOSUserBundle中默认的控制器提供了大量的功能来满足日常使用. 但在你的应用中, 通常需要继承这些功能, 并且在里面添加你自己的业务逻辑.&lt;br&gt;
    
    </summary>
    
      <category term="外文翻译" scheme="http://yoursite.com/categories/%E5%A4%96%E6%96%87%E7%BF%BB%E8%AF%91/"/>
    
    
      <category term="翻译" scheme="http://yoursite.com/tags/%E7%BF%BB%E8%AF%91/"/>
    
      <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
      <category term="Symfony" scheme="http://yoursite.com/tags/Symfony/"/>
    
      <category term="FOSUserBundle" scheme="http://yoursite.com/tags/FOSUserBundle/"/>
    
  </entry>
  
  <entry>
    <title>Symfony框架之FOSUserBundle挂载到控制器</title>
    <link href="http://yoursite.com/2016/10/01/fosuserbundle-hooking-into-the-controller/"/>
    <id>http://yoursite.com/2016/10/01/fosuserbundle-hooking-into-the-controller/</id>
    <published>2016-10-01T15:05:11.000Z</published>
    <updated>2016-10-01T15:07:17.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;原文地址&lt;a href=&quot;http://symfony.com/doc/current/bundles/FOSUserBundle/controller_events.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://symfony.com/doc/current/bundles/FOSUserBundle/controller_events.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;通过FOSUserBundle包装过的控制器提供了一些能够满足一般需要的功能. 不过你可能需要在你的应用中扩展这些功能, 并且加入你自己的业务逻辑.&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;出于此目的, 控制器在他们的逻辑中的多个地方触发了一些事件. 所有的事件都能在&lt;code&gt;FOS\UserBundle\FOSUserEvents&lt;/code&gt;类中的常量找到.&lt;/p&gt;
&lt;p&gt;所有的控制器都遵循一个约定: 他们会在表单验证之后保存用户数据之前触发一个&lt;code&gt;SUCCESS&lt;/code&gt;事件, 并且在保存用户数据之后触发一个&lt;code&gt;COMPLETED&lt;/code&gt;事件.因此你不想使用默认的重定向, 你可以在所有的&lt;code&gt;SUCCESS&lt;/code&gt;事件之后你可以设置一个响应. 所有的&lt;code&gt;COMPLETED&lt;/code&gt;事件允许你在控制器返回之前设置一个响应.&lt;/p&gt;
&lt;p&gt;带表单的控制器在实体加载完毕之后通常会触发一个&lt;code&gt;INITIALIZE&lt;/code&gt;事件, 而不是在表单创建之后.&lt;/p&gt;
&lt;p&gt;例如,下面这个监听器会在重置密码之后跳转到homepage, 而不是profile页面:&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// src/Acme/UserBundle/EventListener/PasswordResettingListener.php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Acme&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;UserBundle&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;EventListener&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;FOS&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;UserBundle&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;FOSUserEvents&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;FOS&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;UserBundle&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;Event&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;FormEvent&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Symfony&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;Component&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;EventDispatcher&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;EventSubscriberInterface&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Symfony&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;Component&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;HttpFoundation&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;RedirectResponse&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Symfony&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;Component&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;Routing&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;Generator&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;UrlGeneratorInterface&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Listener responsible to change the redirection at the end of the password resetting&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;PasswordResettingListener&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;EventSubscriberInterface&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; $router;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__construct&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(UrlGeneratorInterface $router)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $this-&amp;gt;router = $router;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &amp;#123;&lt;span class=&quot;doctag&quot;&gt;@inheritdoc&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getSubscribedEvents&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;array&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            FOSUserEvents::RESETTING_RESET_SUCCESS =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;onPasswordResettingSuccess&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onPasswordResettingSuccess&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(FormEvent $event)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $url = $this-&amp;gt;router-&amp;gt;generate(&lt;span class=&quot;string&quot;&gt;&#39;homepage&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $event-&amp;gt;setResponse(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; RedirectResponse($url));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后你可以在配置中注册这个监听器:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# src/Acme/UserBundle/Resources/config/services.yml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;services:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    acme_user.password_resetting:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        class: Acme\UserBundle\EventListener\PasswordResettingListener&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        arguments: [&amp;apos;@router&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        tags:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            - &amp;#123; name: kernel.event_subscriber &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;原文地址&lt;a href=&quot;http://symfony.com/doc/current/bundles/FOSUserBundle/controller_events.html&quot;&gt;http://symfony.com/doc/current/bundles/FOSUserBundle/controller_events.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;通过FOSUserBundle包装过的控制器提供了一些能够满足一般需要的功能. 不过你可能需要在你的应用中扩展这些功能, 并且加入你自己的业务逻辑.&lt;/p&gt;
    
    </summary>
    
      <category term="外文翻译" scheme="http://yoursite.com/categories/%E5%A4%96%E6%96%87%E7%BF%BB%E8%AF%91/"/>
    
    
      <category term="翻译" scheme="http://yoursite.com/tags/%E7%BF%BB%E8%AF%91/"/>
    
      <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
      <category term="Symfony" scheme="http://yoursite.com/tags/Symfony/"/>
    
      <category term="FOSUserBundle" scheme="http://yoursite.com/tags/FOSUserBundle/"/>
    
  </entry>
  
  <entry>
    <title>Symfony框架之重写FOSUserBundle的默认模板</title>
    <link href="http://yoursite.com/2016/09/28/overriding-default-fosuserbundle-templates/"/>
    <id>http://yoursite.com/2016/09/28/overriding-default-fosuserbundle-templates/</id>
    <published>2016-09-28T14:41:21.000Z</published>
    <updated>2016-09-28T14:55:54.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;原文地址: &lt;a href=&quot;http://symfony.com/doc/current/bundles/FOSUserBundle/overriding_templates.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://symfony.com/doc/current/bundles/FOSUserBundle/overriding_templates.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如果你在应用中使用了FOSUserBundle, 你势必会想办法去重写这个bundle提供的默认模板.&lt;br&gt;虽然模板的名称是不可配置的, 但是Symfony框架也为我们提供了两种重写模板的方式.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在&lt;code&gt;app/Resources&lt;/code&gt;文件夹中定义一个同名模板文件.&lt;/li&gt;
&lt;li&gt;创建一个继承了&lt;code&gt;FOSUserBundle&lt;/code&gt;的bundle.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;举例-重写默认的-layout-html-twig&quot;&gt;&lt;a href=&quot;#举例-重写默认的-layout-html-twig&quot; class=&quot;headerlink&quot; title=&quot;举例:重写默认的 layout.html.twig&quot;&gt;&lt;/a&gt;举例:重写默认的 layout.html.twig&lt;/h3&gt;&lt;p&gt;推荐的做法是重写&lt;code&gt;Resources/views/layout.html.twig&lt;/code&gt;模板, 这样能保证FOSUserBundle提供的页面能与你应用的页面风格保持一致. 下面是一个重写&lt;code&gt;layout.html.twig&lt;/code&gt;的例子, 它包含了所有的重写选项.&lt;/p&gt;
&lt;p&gt;FOSUserBundle提供的默认的&lt;code&gt;layout.html.twig&lt;/code&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight twig&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;head&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;meta charset=&quot;UTF-8&quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/head&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;template-tag&quot;&gt;&amp;#123;% &lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;&lt;/span&gt; is_granted(&quot;IS_AUTHENTICATED_REMEMBERED&quot;) %&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;template-variable&quot;&gt;&amp;#123;&amp;#123; &#39;layout.logged_in_as&#39;|trans(&amp;#123;&#39;%username%&#39;: app.user.username&amp;#125;, &#39;FOSUserBundle&#39;) &amp;#125;&amp;#125;&lt;/span&gt; |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;a href=&quot;&lt;span class=&quot;template-variable&quot;&gt;&amp;#123;&amp;#123; path(&#39;fos_user_security_logout&#39;) &amp;#125;&amp;#125;&lt;/span&gt;&quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;template-variable&quot;&gt;&amp;#123;&amp;#123; &#39;layout.logout&#39;|trans(&amp;#123;&amp;#125;, &#39;FOSUserBundle&#39;) &amp;#125;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;/a&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;template-tag&quot;&gt;&amp;#123;% &lt;span class=&quot;name&quot;&gt;else&lt;/span&gt; %&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;a href=&quot;&lt;span class=&quot;template-variable&quot;&gt;&amp;#123;&amp;#123; path(&#39;fos_user_security_login&#39;) &amp;#125;&amp;#125;&lt;/span&gt;&quot;&amp;gt;&lt;span class=&quot;template-variable&quot;&gt;&amp;#123;&amp;#123; &#39;layout.login&#39;|trans(&amp;#123;&amp;#125;, &#39;FOSUserBundle&#39;) &amp;#125;&amp;#125;&lt;/span&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;template-tag&quot;&gt;&amp;#123;% &lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt; %&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;template-tag&quot;&gt;&amp;#123;% &lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;&lt;/span&gt; type, messages in app.session.flashBag.all %&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;template-tag&quot;&gt;&amp;#123;% &lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;&lt;/span&gt; message in messages %&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;div class=&quot;&lt;span class=&quot;template-variable&quot;&gt;&amp;#123;&amp;#123; type &amp;#125;&amp;#125;&lt;/span&gt;&quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;template-variable&quot;&gt;&amp;#123;&amp;#123; message|trans(&amp;#123;&amp;#125;, &#39;FOSUserBundle&#39;) &amp;#125;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;template-tag&quot;&gt;&amp;#123;% &lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;endfor&lt;/span&gt;&lt;/span&gt; %&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;template-tag&quot;&gt;&amp;#123;% &lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;endfor&lt;/span&gt;&lt;/span&gt; %&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;template-tag&quot;&gt;&amp;#123;% &lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;block&lt;/span&gt;&lt;/span&gt; fos_user_content %&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;template-tag&quot;&gt;&amp;#123;% &lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;endblock&lt;/span&gt;&lt;/span&gt; fos_user_content %&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如你所见, 它非常的简洁, 没有太多的结构, 所以你肯定会想用你应用中的布局文件来替换他. 在这个模板文件中主要要注意的地方就是名为&lt;code&gt;fos_user_content&lt;/code&gt;的区块. 这是FOSUserBundle要在不同bundle的action中显示的内容, 所以你必须在你要重写的布局文件中包含这个区块.&lt;/p&gt;
&lt;p&gt;下面的Twig模板是复写布局文件的例子.&lt;/p&gt;
&lt;figure class=&quot;highlight twig&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;template-tag&quot;&gt;&amp;#123;% &lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;block&lt;/span&gt;&lt;/span&gt; title %&amp;#125;&lt;/span&gt;Demo Application&lt;span class=&quot;template-tag&quot;&gt;&amp;#123;% &lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;endblock&lt;/span&gt;&lt;/span&gt; %&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;template-tag&quot;&gt;&amp;#123;% &lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;block&lt;/span&gt;&lt;/span&gt; content %&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;template-tag&quot;&gt;&amp;#123;% &lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;block&lt;/span&gt;&lt;/span&gt; fos_user_content %&amp;#125;&lt;/span&gt;&lt;span class=&quot;template-tag&quot;&gt;&amp;#123;% &lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;endblock&lt;/span&gt;&lt;/span&gt; %&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;template-tag&quot;&gt;&amp;#123;% &lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;endblock&lt;/span&gt;&lt;/span&gt; %&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面的例子继承了你的应用中的布局. &lt;code&gt;content&lt;/code&gt; 区块是每个页面中显示内容的主要区域. 这就是为何&lt;code&gt;fos_user_content&lt;/code&gt; 区块要包含在它里面的原因. 这将使FOSUserBundle的输出能够像预期的一样集成到应用的布局中去, 看上去像一个整体.&lt;/p&gt;
&lt;h4 id=&quot;a-在app-Resources中创建一个新的模板文件&quot;&gt;&lt;a href=&quot;#a-在app-Resources中创建一个新的模板文件&quot; class=&quot;headerlink&quot; title=&quot;a)在app/Resources中创建一个新的模板文件&quot;&gt;&lt;/a&gt;a)在app/Resources中创建一个新的模板文件&lt;/h4&gt;&lt;p&gt;重写模板的最简单的方式是在你的&lt;code&gt;app/Resources&lt;/code&gt;文件夹中创建一个新的模板. 为了重写&lt;code&gt;FOSUserBundle&lt;/code&gt;文件夹中的&lt;code&gt;Resources/views/layout.html.twig&lt;/code&gt;文件, 你应该将新的模板文件保存在&lt;code&gt;app/Resources/FOSUserBundle/views/layout.html.twig&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;正如你看到的, 这种方式是在你的&lt;code&gt;app/Resources&lt;/code&gt;目录中直接创建一个同名bundle的文件夹. 然后将你要重写的模板按照原来的目录结构保存在里面.&lt;/p&gt;
&lt;h4 id=&quot;b-创建一个继承FOSUserBundle的bundle并且重写模板&quot;&gt;&lt;a href=&quot;#b-创建一个继承FOSUserBundle的bundle并且重写模板&quot; class=&quot;headerlink&quot; title=&quot;b)创建一个继承FOSUserBundle的bundle并且重写模板&quot;&gt;&lt;/a&gt;b)创建一个继承FOSUserBundle的bundle并且重写模板&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;这种方式相对上面的方式来说会复杂一些.除非你计划重写控制器以及模板, 不然还是使用另外一个方法比较好.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如上所述, 你可以创建一个FOSUserBundle的子bundle, 并且将要重写的模板保存在与FOSUserBundle相同的位置.首先要做的是在你的bundle类中重写&lt;code&gt;getParent&lt;/code&gt;方法.&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// src/Acme/UserBundle/AcmeUserBundle.php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Acme&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;UserBundle&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Symfony&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;Component&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;HttpKernel&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;Bundle&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;Bundle&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AcmeUserBundle&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Bundle&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getParent&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;FOSUserBundle&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通过你的bundle类中&lt;code&gt;getParent&lt;/code&gt;方法返回的bundle的名称, 你可以告诉Symfony框架你的bundle是继承自FOSUserBundle的.&lt;/p&gt;
&lt;p&gt;一旦你将你的bundle定义成了FOSUserBundle的子bundle, 你就可以重写父级bundle中的模板文件了. 若要重写布局文件, 只需要在&lt;code&gt;src/Acme/UserBundle/Resources/views&lt;/code&gt;文件夹中创建一个名为&lt;code&gt;layout.html.twig&lt;/code&gt;的文件. 注意此文件在bundle中的路径应该与在&lt;code&gt;FOSUserBundle&lt;/code&gt;中的路径一样.&lt;/p&gt;
&lt;p&gt;一旦在你的子bundle中重写了模板, 你就需要清理缓存, 即使是在开发环境中也要清理.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;重写FOSUserBundle中其他的模板文件的方式跟此文中介绍的方式相同. &lt;/em&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;原文地址: &lt;a href=&quot;http://symfony.com/doc/current/bundles/FOSUserBundle/overriding_templates.html&quot;&gt;http://symfony.com/doc/current/bundles/FOSUserBundle/overriding_templates.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如果你在应用中使用了FOSUserBundle, 你势必会想办法去重写这个bundle提供的默认模板.&lt;br&gt;虽然模板的名称是不可配置的, 但是Symfony框架也为我们提供了两种重写模板的方式.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在&lt;code&gt;app/Resources&lt;/code&gt;文件夹中定义一个同名模板文件.&lt;/li&gt;
&lt;li&gt;创建一个继承了&lt;code&gt;FOSUserBundle&lt;/code&gt;的bundle.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="外文翻译" scheme="http://yoursite.com/categories/%E5%A4%96%E6%96%87%E7%BF%BB%E8%AF%91/"/>
    
    
      <category term="翻译" scheme="http://yoursite.com/tags/%E7%BF%BB%E8%AF%91/"/>
    
      <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
      <category term="Symfony" scheme="http://yoursite.com/tags/Symfony/"/>
    
      <category term="FOSUserBundle" scheme="http://yoursite.com/tags/FOSUserBundle/"/>
    
  </entry>
  
  <entry>
    <title>Symfony框架之FOSUserBundle入门教程</title>
    <link href="http://yoursite.com/2016/09/15/getting-started-with-FOSUserBundle/"/>
    <id>http://yoursite.com/2016/09/15/getting-started-with-FOSUserBundle/</id>
    <published>2016-09-15T12:33:03.000Z</published>
    <updated>2016-10-07T14:12:22.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;原文地址: &lt;a href=&quot;http://symfony.com/doc/current/bundles/FOSUserBundle/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://symfony.com/doc/current/bundles/FOSUserBundle/index.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Symfony的安全组件为你提供了一个灵活的框架, 它允许你从配置文件, 数据库, 或者其他任何你想象的到的地方来加载用户. FOSUserBundle则建立在此基础上, 更方便快速的将用户信息存储到数据库之中.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;准备工作&lt;/strong&gt;&lt;br&gt;1.3.x版本的FOSUserBundle依赖于Symfony2.1+. 如果你使用的是Symfony2.0.x, 请使用1.2.x系列的版本.&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;翻译&lt;/strong&gt;&lt;br&gt;如果你要使用此bundle提供的默认文本, 你必须保证你的配置文件中已经开启了翻译功能.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# app/config/config.yml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;framework:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    translator: ~&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;更多关于翻译的信息, 请点击&lt;a href=&quot;https://symfony.com/doc/current/book/translation.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Symfonydocumentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安装&lt;/strong&gt;&lt;br&gt;整个安装过程有7个步骤:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用composer下载FOSUserBundle&lt;/li&gt;
&lt;li&gt;启用Bundle&lt;/li&gt;
&lt;li&gt;创建你的User类&lt;/li&gt;
&lt;li&gt;配置应用中的security.yml文件&lt;/li&gt;
&lt;li&gt;配置FOSUserBundle&lt;/li&gt;
&lt;li&gt;导入FOSUserBundle的路由文件&lt;/li&gt;
&lt;li&gt;更新数据库的Schema&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;步骤1-使用Composer下载FOSUserBundle&quot;&gt;&lt;a href=&quot;#步骤1-使用Composer下载FOSUserBundle&quot; class=&quot;headerlink&quot; title=&quot;步骤1:使用Composer下载FOSUserBundle&quot;&gt;&lt;/a&gt;步骤1:使用Composer下载FOSUserBundle&lt;/h3&gt;&lt;p&gt;使用composer安装bundle:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ composer require friendsofsymfony/user-bundle &amp;quot;~2.0@dev&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Composer会将bundle安装到你项目中的&lt;code&gt;vendor/friendsofsymfony/user-bundle&lt;/code&gt;文件夹内.&lt;br&gt;如果你遇到了缺少配置参数的错误, 例如 &lt;code&gt;The child node &amp;quot;db_driver&amp;quot; at path &amp;quot;fos_user&amp;quot; must be configured&lt;/code&gt;, 你应该先完成&lt;a href=&quot;#步骤5-配置FOSUserBundle&quot;&gt;步骤5&lt;/a&gt;, 然后再重新执行这一步.&lt;/p&gt;
&lt;h3 id=&quot;步骤2-启用Bundle&quot;&gt;&lt;a href=&quot;#步骤2-启用Bundle&quot; class=&quot;headerlink&quot; title=&quot;步骤2: 启用Bundle&quot;&gt;&lt;/a&gt;步骤2: 启用Bundle&lt;/h3&gt;&lt;p&gt;在kernel中启用此bundle:&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// app/AppKernel.php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;registerBundles&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $bundles = &lt;span class=&quot;keyword&quot;&gt;array&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FOS\UserBundle\FOSUserBundle(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;步骤3-创建你的用户类&quot;&gt;&lt;a href=&quot;#步骤3-创建你的用户类&quot; class=&quot;headerlink&quot; title=&quot;步骤3:创建你的用户类&quot;&gt;&lt;/a&gt;步骤3:创建你的用户类&lt;/h3&gt;&lt;p&gt;FOSUserBundle自始至终是使用一些&lt;code&gt;User&lt;/code&gt;类来操作数据库的 (MySql, MongoDB, CouchDB, 等等). 你首先应该为你的应用创建一个&lt;code&gt;User&lt;/code&gt;类.这个类可以包含任何你觉得有用的方法和属性. 因为这是你的&lt;code&gt;User&lt;/code&gt;类.&lt;br&gt;FOSUserBundle提供了一些已经映射了大多数字段的基类, 这个类能让你更简单的创建entity. 你可以这么使用:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;继承&lt;code&gt;User&lt;/code&gt;的基类.&lt;/li&gt;
&lt;li&gt;映射&lt;code&gt;id&lt;/code&gt;字段.  它必须被设为protected, 因为在父类中他已经被定义过了.&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;当你继承了FOSUserBundle提供的已经做过映射的超类时, 不要定义其他已经定义好的映射.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;接下来你将看到根据你存储方式的不同如何来定义你的&lt;code&gt;User&lt;/code&gt;类(Doctrine ORM, MongoDB ODM, 或 CouchDB ODM).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果在你的 &lt;code&gt;User&lt;/code&gt; 类中重写了&lt;code&gt;__construct()&lt;/code&gt;方法, 请务必执行 &lt;code&gt;parent::__construct()&lt;/code&gt;, 因为&lt;code&gt;User&lt;/code&gt;基类通过这个方法初始化了一些字段.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;a)Doctrine ORM User class&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果你通过Doctrine ORM来管理用户, 你的&lt;code&gt;User&lt;/code&gt;类应该存在&lt;code&gt;Entity&lt;/code&gt;命名空间之内, 就像这样.&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// src/AppBundle/Entity/User.php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AppBundle&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;Entity&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;FOS&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;UserBundle&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;Model&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BaseUser&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Doctrine&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;ORM&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;Mapping&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ORM&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@ORM&lt;/span&gt;\Entity&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@ORM&lt;/span&gt;\Table(name=&quot;fos_user&quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BaseUser&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@ORM&lt;/span&gt;\Id&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@ORM&lt;/span&gt;\Column(type=&quot;integer&quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@ORM&lt;/span&gt;\GeneratedValue(strategy=&quot;AUTO&quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; $id;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__construct&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;parent&lt;/span&gt;::__construct();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// your own logic&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;user&lt;/code&gt;在标准SQL中是一个保留字, 如果你需要使用这个保留字, 那就要用反引号把它包围起来.就像这样  @ORM\Table(name=”`user`“)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;b)MongoDB User class&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;假如你使用 Doctrine MongoDB ODM来操作你的用户, 那你的&lt;code&gt;User&lt;/code&gt;类应该在你的bundle中的&lt;code&gt;Document&lt;/code&gt;命名空间之内, 就像下面这样:&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// src/AppBundle/Document/User.php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AppBundle&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;Document&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;FOS&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;UserBundle&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;Model&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BaseUser&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Doctrine&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;ODM&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;MongoDB&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;Mapping&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;Annotations&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MongoDB&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@MongoDB&lt;/span&gt;\Document&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BaseUser&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@MongoDB&lt;/span&gt;\Id(strategy=&quot;auto&quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; $id;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__construct&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;parent&lt;/span&gt;::__construct();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// your own logic&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;c) CouchDB User class&lt;/strong&gt;&lt;br&gt;如果你通过Doctrine CouchDB ODM来错做用户, 你的&lt;code&gt;User&lt;/code&gt;类应该在&lt;code&gt;CouchDocument&lt;/code&gt;命名空间中, 就像这样:&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// src/AppBundle/CouchDocument/User.php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AppBundle&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;CouchDocument&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;FOS&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;UserBundle&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;Model&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BaseUser&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Doctrine&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;ODM&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;CouchDB&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;Mapping&lt;/span&gt;\&lt;span class=&quot;title&quot;&gt;Annotations&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CouchDB&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@CouchDB&lt;/span&gt;\Document&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BaseUser&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@CouchDB&lt;/span&gt;\Id&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; $id;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__construct&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;parent&lt;/span&gt;::__construct();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// your own logic&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;步骤4-配置应用中的security-yml文件&quot;&gt;&lt;a href=&quot;#步骤4-配置应用中的security-yml文件&quot; class=&quot;headerlink&quot; title=&quot;步骤4:配置应用中的security.yml文件&quot;&gt;&lt;/a&gt;步骤4:配置应用中的security.yml文件&lt;/h3&gt;&lt;p&gt;为了让Symfony的安全组件能够使用FOSUserBundle, 你需要配置&lt;code&gt;security.yml&lt;/code&gt;文件. &lt;code&gt;security.yml&lt;/code&gt;包含了应用安全组件的基本配置.&lt;br&gt;下面是能够使用FOSUserBundle的必须配置.&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# app/config/security.yml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;security:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    encoders:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        FOS\UserBundle\Model\UserInterface: bcrypt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    role_hierarchy:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ROLE_ADMIN:       ROLE_USER&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ROLE_SUPER_ADMIN: ROLE_ADMIN&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    providers:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fos_userbundle:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            id: fos_user.user_provider.username&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    firewalls:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        main:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            pattern: ^/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            form_login:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                provider: fos_userbundle&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                csrf_token_generator: security.csrf.token_manager&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                # if you are using Symfony &amp;lt; 2.8, use the following config instead:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                # csrf_provider: form.csrf_provider&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            logout:       true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            anonymous:    true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    access_control:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        - &amp;#123; path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        - &amp;#123; path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        - &amp;#123; path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        - &amp;#123; path: ^/admin/, role: ROLE_ADMIN &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;providers&lt;/code&gt;部分, 你通过&lt;code&gt;fos_userbundle&lt;/code&gt;别名来使用FOSUserBundle中可用的的用户服务提供者.它的id是&lt;code&gt;fos_user.user_provider.username&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;下面我们来看&lt;code&gt;firewalls&lt;/code&gt;部分. 这里我们申明了一个防火墙名为&lt;code&gt;main&lt;/code&gt;. 通过指定&lt;code&gt;form_login&lt;/code&gt;, 你需要告诉Symfony框架在任何时候的请求发送到这个防火墙时&lt;br&gt;都将引导用户进行认证, 不然用户将被重定向到一个表单页来输入他的凭证.&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;access_control&lt;/code&gt;部分你可以指定用户在访问你应用中特殊的地址时所需要的凭证.bundle指定未认证用户能够在登录表单以及所有的路由中创建用户和重置密码.&lt;br&gt;这就是为什么你指定任何请求去匹配&lt;code&gt;/login&lt;/code&gt;或者以&lt;code&gt;/register&lt;/code&gt; 和 &lt;code&gt;/resetting&lt;/code&gt;开头的地址时,将用户类型指定为匿名用户了.你肯定也注意到了, 任何以&lt;code&gt;/admin&lt;/code&gt;开头的请求地址都需要用户为&lt;code&gt;ROLE_ADMIN&lt;/code&gt;的身份.&lt;/p&gt;
&lt;p&gt;更多关于&lt;code&gt;security.yml&lt;/code&gt;文件的配置, 请查阅&lt;a href=&quot;https://symfony.com/doc/current/book/security.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Symfony安全组件文档&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;请注意我们在防火墙中配置的名称&lt;code&gt;main&lt;/code&gt;, 你将在下一个步骤中使用它来配置FOSUserBundle.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;步骤5-配置FOSUserBundle&quot;&gt;&lt;a href=&quot;#步骤5-配置FOSUserBundle&quot; class=&quot;headerlink&quot; title=&quot;步骤5:配置FOSUserBundle&quot;&gt;&lt;/a&gt;步骤5:配置FOSUserBundle&lt;/h3&gt;&lt;p&gt;现在我们配置的&lt;code&gt;security.yml&lt;/code&gt;已经能够让FOSUserBundle正确的运行了, 接下来我们来为应用配置一些特定的需求.&lt;br&gt;根据你使用的数据库类型, 添加下面的配置信息到你的&lt;code&gt;config.yml&lt;/code&gt;文件中.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# app/config/config.yml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fos_user:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    db_driver: orm # other valid values are &amp;apos;mongodb&amp;apos;, &amp;apos;couchdb&amp;apos; and &amp;apos;propel&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    firewall_name: main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    user_class: AppBundle\Entity\User&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;仅需配置三个必须的配置项:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;你使用的数据库类型.(orm, mongodb, couchdb)&lt;/li&gt;
&lt;li&gt;你在&lt;a href=&quot;#步骤4-配置应用中的security-yml文件&quot;&gt;步骤4&lt;/a&gt;中配置的防火墙名字.&lt;/li&gt;
&lt;li&gt;在&lt;a href=&quot;#步骤3-创建你的用户类&quot;&gt;步骤3&lt;/a&gt;中创建的&lt;code&gt;User&lt;/code&gt;类的全路径名.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;步骤6-导入FOSUserBundle的路由文件&quot;&gt;&lt;a href=&quot;#步骤6-导入FOSUserBundle的路由文件&quot; class=&quot;headerlink&quot; title=&quot;步骤6:导入FOSUserBundle的路由文件&quot;&gt;&lt;/a&gt;步骤6:导入FOSUserBundle的路由文件&lt;/h3&gt;&lt;p&gt;现在你已经配置并且启用了整个bundle, 剩下的就是要导入所有的FOSUserBundle路由文件.&lt;br&gt;通过导入路由文件, 你将会生成一些现成的页面, 比如登录, 创建用户等等.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# app/config/routing.yml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fos_user:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    resource: &amp;quot;@FOSUserBundle/Resources/config/routing/all.xml&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;为了正常的使用内部的邮件功能(用于用户激活以及重置密码功能), 你必须配置并且启用了SwiftmailerBundle&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;步骤7-更新数据库的Schema&quot;&gt;&lt;a href=&quot;#步骤7-更新数据库的Schema&quot; class=&quot;headerlink&quot; title=&quot;步骤7:更新数据库的Schema&quot;&gt;&lt;/a&gt;步骤7:更新数据库的Schema&lt;/h3&gt;&lt;p&gt;至此, 整个bundle已经配置完毕, 因为在&lt;a href=&quot;#步骤4-配置应用中的security-yml文件&quot;&gt;步骤4&lt;/a&gt;中你创建了&lt;code&gt;User&lt;/code&gt;类并且添加了新的entity, 所以现在你要做的就是更新你的数据库Schema.&lt;br&gt;如果使用ORM,请执行下面命令.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ php bin/console doctrine:schema:update --force&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;若使用的是MongoDB, 你则需要执行下面命令来创建索引.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ php bin/console doctrine:mongodb:schema:create --index&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;现在你可以在&lt;code&gt;http://app.com/app_dev.php/login&lt;/code&gt;地址中登录了.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;下一步&lt;/strong&gt;&lt;br&gt;现在你已经完成了FOSUserBundle的基本安装与配置, 可以了解一些更高级的特性.&lt;br&gt;比如下面这些可用的文档:&lt;br&gt;&lt;a href=&quot;/2016/09/28/overriding-default-fosuserbundle-templates/&quot; title=&quot;重写FOSUserBundle的默认模板&quot;&gt;重写FOSUserBundle的默认模板&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;/2016/10/01/fosuserbundle-hooking-into-the-controller/&quot; title=&quot;挂载到控制器&quot;&gt;挂载到控制器&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;/2016/10/04/fosuserbundle-overriding-default-controllers/&quot; title=&quot;重写FOSUserBundle的默认控制器&quot;&gt;重写FOSUserBundle的默认控制器&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;/2016/10/07/fosuserbundle-overriding-default-forms/&quot; title=&quot;重写FOSUserBundle的默认表单&quot;&gt;重写FOSUserBundle的默认表单&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;#&quot;&gt;关于FOSUserBundle的用户管理&lt;/a&gt;(待翻译)&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;原文地址: &lt;a href=&quot;http://symfony.com/doc/current/bundles/FOSUserBundle/index.html&quot;&gt;http://symfony.com/doc/current/bundles/FOSUserBundle/index.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Symfony的安全组件为你提供了一个灵活的框架, 它允许你从配置文件, 数据库, 或者其他任何你想象的到的地方来加载用户. FOSUserBundle则建立在此基础上, 更方便快速的将用户信息存储到数据库之中.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;准备工作&lt;/strong&gt;&lt;br&gt;1.3.x版本的FOSUserBundle依赖于Symfony2.1+. 如果你使用的是Symfony2.0.x, 请使用1.2.x系列的版本.&lt;/p&gt;
    
    </summary>
    
      <category term="外文翻译" scheme="http://yoursite.com/categories/%E5%A4%96%E6%96%87%E7%BF%BB%E8%AF%91/"/>
    
    
      <category term="翻译" scheme="http://yoursite.com/tags/%E7%BF%BB%E8%AF%91/"/>
    
      <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
      <category term="Symfony" scheme="http://yoursite.com/tags/Symfony/"/>
    
      <category term="FOSUserBundle" scheme="http://yoursite.com/tags/FOSUserBundle/"/>
    
  </entry>
  
  <entry>
    <title>使用PhpStorm在vagrant环境下配置phpunit进行单元测试</title>
    <link href="http://yoursite.com/2016/08/04/phpunit-test-in-phpstorm-and-vagrant/"/>
    <id>http://yoursite.com/2016/08/04/phpunit-test-in-phpstorm-and-vagrant/</id>
    <published>2016-08-04T05:48:36.000Z</published>
    <updated>2016-08-04T09:33:46.000Z</updated>
    
    <content type="html">&lt;p&gt;此文章主要介绍如何使用宿主机器中的PhpStorm配置vagrant环境中的phpunit来进行单元测试.&lt;/p&gt;
&lt;h2 id=&quot;前期准备&quot;&gt;&lt;a href=&quot;#前期准备&quot; class=&quot;headerlink&quot; title=&quot;前期准备&quot;&gt;&lt;/a&gt;前期准备&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;将phpstorm跟项目所在的vagrant虚拟机做关联:&lt;br&gt;依次进入 &lt;strong&gt;&lt;em&gt; Settings -&amp;gt; Tools -&amp;gt; Vagrant &lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;img src=&quot;/2016/08/04/phpunit-test-in-phpstorm-and-vagrant/step-1.png&quot; alt=&quot;关联vagrant&quot; title=&quot;关联vagrant&quot;&gt;
&lt;blockquote&gt;
&lt;p&gt;注意配置好红框里面的本地vagrant环境变量以及对应的vagrant虚拟机目录&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;  然后就可以使用工具栏中的vagrant来管理对应的虚拟机了, 详见工具栏: &lt;strong&gt;&lt;em&gt; Tools -&amp;gt; Vagrant &lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
  &lt;img src=&quot;/2016/08/04/phpunit-test-in-phpstorm-and-vagrant/step-1-2.png&quot; alt=&quot;使用phpstorm管理vagrant&quot; title=&quot;使用phpstorm管理vagrant&quot;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;配置好phpstorm中的php解释器   &lt;strong&gt;&lt;em&gt; 进入下面的页面添加php解释器 &lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;img src=&quot;/2016/08/04/phpunit-test-in-phpstorm-and-vagrant/step-2-1.png&quot; alt=&quot;添加php解释器&quot; title=&quot;添加php解释器&quot;&gt;
&lt;img src=&quot;/2016/08/04/phpunit-test-in-phpstorm-and-vagrant/step-2-2.png&quot; alt=&quot;选择添加remote解释器&quot; title=&quot;选择添加remote解释器&quot;&gt;
&lt;img src=&quot;/2016/08/04/phpunit-test-in-phpstorm-and-vagrant/step-2-3.png&quot; alt=&quot;设置vagrant虚拟机的php解释器&quot; title=&quot;设置vagrant虚拟机的php解释器&quot;&gt;
&lt;img src=&quot;/2016/08/04/phpunit-test-in-phpstorm-and-vagrant/step-2-5.png&quot; alt=&quot;设置宿主机与vagrant虚拟机之间的目录映射&quot; title=&quot;设置宿主机与vagrant虚拟机之间的目录映射&quot;&gt;
&lt;blockquote&gt;
&lt;p&gt;注意设置好宿主机与vagrant虚拟机之间的目录映射关系.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img src=&quot;/2016/08/04/phpunit-test-in-phpstorm-and-vagrant/step-2-4.png&quot; alt=&quot;配置完全&quot; title=&quot;配置完全&quot;&gt;
&lt;blockquote&gt;
&lt;p&gt;配置完全之后, php的解释器就如上图所示, 注意将 &lt;strong&gt;&lt;em&gt; PHP language level &lt;/em&gt;&lt;/strong&gt; 与你配置的解释器版本对应好.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;配置PHPUnit&quot;&gt;&lt;a href=&quot;#配置PHPUnit&quot; class=&quot;headerlink&quot; title=&quot;配置PHPUnit&quot;&gt;&lt;/a&gt;配置PHPUnit&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;进入 &lt;strong&gt;&lt;em&gt; Settings -&amp;gt; Language &amp;amp; Frameworks -&amp;gt; PHP -&amp;gt; PHPUnit &lt;/em&gt;&lt;/strong&gt; 远程PHPUnit解释器&lt;/p&gt;
&lt;img src=&quot;/2016/08/04/phpunit-test-in-phpstorm-and-vagrant/step-3-1.png&quot; alt=&quot;配置远程PHPUnit解释器&quot; title=&quot;配置远程PHPUnit解释器&quot;&gt;
&lt;img src=&quot;/2016/08/04/phpunit-test-in-phpstorm-and-vagrant/step-3-2.png&quot; alt=&quot;选择刚才配置的远程PHP解释器&quot; title=&quot;选择刚才配置的远程PHP解释器&quot;&gt;
&lt;img src=&quot;/2016/08/04/phpunit-test-in-phpstorm-and-vagrant/step-3-3.png&quot; alt=&quot;配置PHPUnit相关选项&quot; title=&quot;配置PHPUnit相关选项&quot;&gt;
&lt;blockquote&gt;
&lt;p&gt;注意选好对应的PHPUnit类库, 通常是选择 &lt;strong&gt;&lt;em&gt; Use custom autoloader &lt;/em&gt;&lt;/strong&gt; 或者 &lt;strong&gt;&lt;em&gt; phpunit.phar &lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;选择 &lt;strong&gt;&lt;em&gt;autoloader&lt;/em&gt;&lt;/strong&gt; 的时候, 我们将对应的 &lt;strong&gt;&lt;em&gt;path&lt;/em&gt;&lt;/strong&gt; 设置成 &lt;strong&gt;&lt;em&gt;vender&lt;/em&gt;&lt;/strong&gt; 目录中的 &lt;strong&gt;&lt;em&gt;autoloader.php&lt;/em&gt;&lt;/strong&gt; 文件&lt;br&gt;并且在项目中使用 &lt;strong&gt;&lt;em&gt;composer&lt;/em&gt;&lt;/strong&gt; 安装好相应的 &lt;strong&gt;&lt;em&gt;PHPUnti&lt;/em&gt;&lt;/strong&gt; 扩展即可.&lt;/li&gt;
&lt;li&gt;选择 &lt;strong&gt;&lt;em&gt;phpunit.phar&lt;/em&gt;&lt;/strong&gt; 需将 &lt;strong&gt;&lt;em&gt;Path&lt;/em&gt;&lt;/strong&gt; 设置为 &lt;strong&gt;&lt;em&gt;vagrant&lt;/em&gt;&lt;/strong&gt; 虚拟机中安装好的 &lt;strong&gt;&lt;em&gt;PHPUnit&lt;/em&gt;&lt;/strong&gt; 扩展路径.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;配置测试目录&quot;&gt;&lt;a href=&quot;#配置测试目录&quot; class=&quot;headerlink&quot; title=&quot;配置测试目录&quot;&gt;&lt;/a&gt;配置测试目录&lt;/h2&gt;  &lt;img src=&quot;/2016/08/04/phpunit-test-in-phpstorm-and-vagrant/step-4-1.png&quot; alt=&quot;编辑测试配置&quot; title=&quot;编辑测试配置&quot;&gt;
&lt;blockquote&gt;
&lt;p&gt;点击工具栏 &lt;strong&gt;&lt;em&gt; Run -&amp;gt; Edit Configuration &lt;/em&gt;&lt;/strong&gt; 进行相应配置&lt;/p&gt;
&lt;/blockquote&gt;
  &lt;img src=&quot;/2016/08/04/phpunit-test-in-phpstorm-and-vagrant/step-4-2.png&quot; alt=&quot;添加PHPUnit配置&quot; title=&quot;添加PHPUnit配置&quot;&gt;
&lt;blockquote&gt;
&lt;p&gt;添加PHPUnit配置&lt;/p&gt;
&lt;/blockquote&gt;
  &lt;img src=&quot;/2016/08/04/phpunit-test-in-phpstorm-and-vagrant/step-4-3.png&quot; alt=&quot;配置PHPUnit相关选项&quot; title=&quot;配置PHPUnit相关选项&quot;&gt;
&lt;blockquote&gt;
&lt;p&gt;设置好要测试的文件夹或者文件&lt;/p&gt;
&lt;/blockquote&gt;
  &lt;img src=&quot;/2016/08/04/phpunit-test-in-phpstorm-and-vagrant/step-4-4.png&quot; alt=&quot;点击执行测试&quot; title=&quot;点击执行测试&quot;&gt;
  &lt;img src=&quot;/2016/08/04/phpunit-test-in-phpstorm-and-vagrant/step-4-5.png&quot; alt=&quot;执行完毕的结果&quot; title=&quot;执行完毕的结果&quot;&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;参考文章&quot;&gt;&lt;a href=&quot;#参考文章&quot; class=&quot;headerlink&quot; title=&quot;参考文章&quot;&gt;&lt;/a&gt;参考文章&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://phpunit.de/manual/current/zh_cn/installation.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PHPUnit手册&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://confluence.jetbrains.com/display/PhpStorm/Testing+PHP+Applications&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PhpStorm中测试应用&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://confluence.jetbrains.com/display/PhpStorm/Getting+started+with+Vagrant+in+PhpStorm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在PhpStorm中管理vagrant&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://confluence.jetbrains.com/display/PhpStorm/Running+PHPUnit+tests+over+SSH+on+a+remote+server+with+PhpStorm#RunningPHPUnittestsoverSSHonaremoteserverwithPhpStorm-PHPUnit&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用PhpStorm在远程服务器上执行PHPUnit测试&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://symfony.com/doc/current/testing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Symfony测试文档&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;此文章主要介绍如何使用宿主机器中的PhpStorm配置vagrant环境中的phpunit来进行单元测试.&lt;/p&gt;
&lt;h2 id=&quot;前期准备&quot;&gt;&lt;a href=&quot;#前期准备&quot; class=&quot;headerlink&quot; title=&quot;前期准备&quot;&gt;&lt;/a&gt;前期准备&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;将phpstorm跟项目所在的vagrant虚拟机做关联:&lt;br&gt;依次进入 &lt;strong&gt;&lt;em&gt; Settings -&amp;gt; Tools -&amp;gt; Vagrant &lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;img src=&quot;/2016/08/04/phpunit-test-in-phpstorm-and-vagrant/step-1.png&quot; alt=&quot;关联vagrant&quot; title=&quot;关联vagrant&quot;&gt;
&lt;blockquote&gt;
&lt;p&gt;注意配置好红框里面的本地vagrant环境变量以及对应的vagrant虚拟机目录&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://yoursite.com/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
      <category term="PhpStorm" scheme="http://yoursite.com/tags/PhpStorm/"/>
    
      <category term="Vagrant" scheme="http://yoursite.com/tags/Vagrant/"/>
    
      <category term="测试" scheme="http://yoursite.com/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>使用Webpack 构建AngularJs的开发环境</title>
    <link href="http://yoursite.com/2016/06/17/bundling-angular-with-webpack/"/>
    <id>http://yoursite.com/2016/06/17/bundling-angular-with-webpack/</id>
    <published>2016-06-17T07:42:59.000Z</published>
    <updated>2016-06-21T01:12:37.000Z</updated>
    
    <content type="html">&lt;p&gt;最终我们的工程目录结构:&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;project/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--app/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;----controllers/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;------dashboard.controller.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;----directives/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;------yep-nope.directive.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;----services/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;------github-status.service.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;----app.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--js/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;----angular.min.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--index.html&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;步骤一&lt;br&gt;  为了达到减少网络请求的目的, 我们希望最终的html文件里面仅存在两个js文件 &lt;code&gt;vendor.bundle.js&lt;/code&gt; 和&lt;br&gt;  &lt;code&gt;app.bundle.js&lt;/code&gt; 所以咱们可以现在 index.html页面里面引入这两个js文件, 例如:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;script src=&amp;apos;js/vendor.bundle.js&amp;apos;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;apos;js/app.bundle.js&amp;apos;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;步骤二: 安装依赖&lt;br&gt;进入项目目录, 进行npm的初始化, 在终端键入 &lt;code&gt;npm init -y&lt;/code&gt;&lt;br&gt;安装必须的依赖包&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install angular webpack --save-dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;步骤三: 配置webpack&lt;br&gt;  在你的项目根目录创建 &lt;code&gt;webpack.config.js&lt;/code&gt; 文件&lt;br&gt;  内容如下:&lt;/p&gt;
  &lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; webpack = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;webpack&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	context: __dirname + &lt;span class=&quot;string&quot;&gt;&#39;/app&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	entry: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		app: &lt;span class=&quot;string&quot;&gt;&#39;./app.js&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		vendor: [&lt;span class=&quot;string&quot;&gt;&#39;angular&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	output: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		path: __dirname + &lt;span class=&quot;string&quot;&gt;&#39;/js&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		filename: &lt;span class=&quot;string&quot;&gt;&#39;app.bundle.js&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	plugins: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; webpack.optimize.CommonsChunkPlugin(&lt;span class=&quot;string&quot;&gt;&quot;vendor&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;vendor.bundle.js&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;  这个文件中主要包含三个关键点&lt;code&gt;context&lt;/code&gt;, &lt;code&gt;entry&lt;/code&gt;, 和 &lt;code&gt;output&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;context: 项目源文件的绝对路径&lt;/li&gt;
&lt;li&gt;entry: 你的angular应用的主文件. 在这个例子中, 我们设置了一个包含app和vendor键名的对象, 一边产生多个bundle文件.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;output: 定义编译后的bundle的文件保存的路径以及文件名.&lt;/p&gt;
&lt;p&gt;这里还有一个&lt;strong&gt;plugins&lt;/strong&gt;选项. 他允许我们将一些第三方的库文件合并为一个js文件. &lt;a href=&quot;https://webpack.github.io/docs/code-splitting.html#split-app-and-vendor-code&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;更多配置&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;步骤四: 引入模块&lt;br&gt;  如果此时你打包你的代码, webpack只会将&lt;strong&gt;app.js&lt;/strong&gt;中的代码打包起来. 那是因为我们并没有在&lt;strong&gt;app.js&lt;/strong&gt;里面引入其他代码.&lt;br&gt;  接下来你可以引入任何你需要的代码就像这样:&lt;/p&gt;
  &lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// app.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;require(&lt;span class=&quot;string&quot;&gt;&#39;./directives/yep-nope.controller&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;./services/github-status.service&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;./controllers/dashboard.controller&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;  在一些小的项目里面可以这么做, 但在大型的项目中, 这样做并不合适.&lt;/p&gt;
&lt;p&gt;  相比在文件中直接引入一些控制器文件, 我们可以在controllers文件夹内创建一个&lt;strong&gt;index.js&lt;/strong&gt;文件. 这个文件将为我们引入所有控制器的入口:&lt;/p&gt;
  &lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&#39;use strict&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; angular = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;angular&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;angular.module(&lt;span class=&quot;string&quot;&gt;&#39;dashboard&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.controller(&lt;span class=&quot;string&quot;&gt;&#39;dashboardController&#39;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;./dashboard.controller&#39;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;  现在你controller文件夹下面的控制器文件看起来应该是像这样的:&lt;/p&gt;
  &lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&#39;use strict&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DashboardController.$inject = [&lt;span class=&quot;string&quot;&gt;&#39;GithubStatusService&#39;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;DashboardController&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;gh&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; _this = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _this.github = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gh.getStatus().success(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;status&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        _this.github = status;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = DashboardController;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;  同样, 在directives文件夹中我们也可以这么做. 创建一个&lt;strong&gt;index.js&lt;/strong&gt;文件来引导所有的指令. directives文件夹下的&lt;strong&gt;index.js&lt;/strong&gt;文件可以这么写&lt;/p&gt;
  &lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&#39;use strict&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; angular = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;angular&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;angular.module(&lt;span class=&quot;string&quot;&gt;&#39;dashboard&#39;&lt;/span&gt;).directive(&lt;span class=&quot;string&quot;&gt;&#39;yepNope&#39;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;./yep-nope.directive&#39;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;  services目录下的&lt;strong&gt;index.js&lt;/strong&gt;文件&lt;/p&gt;
  &lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&#39;use strict&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; angular = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(‘angular’);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;angular.module(‘dashboard’).service(‘GithubStatusService’, &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(‘./github-status.service’));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = GithubStatusService;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;最后一行应该是 &lt;code&gt;module.exports = GithubStatusService;&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;  最终我们的&lt;strong&gt;app.js&lt;/strong&gt;文件仅有这些:&lt;/p&gt;
  &lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// app.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;require(&lt;span class=&quot;string&quot;&gt;&#39;./directives&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;./services&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;./controllers&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;  当你的应用越来越大的时候, 你需要添加新的&lt;code&gt;directives&lt;/code&gt;,  &lt;code&gt;services&lt;/code&gt; , 以及 &lt;code&gt;controllers&lt;/code&gt; 你仅需要在&lt;strong&gt;directives/index.js&lt;/strong&gt; &lt;strong&gt;services/index.js&lt;/strong&gt;, 或者  &lt;strong&gt;controllers/index.js&lt;/strong&gt; 中添加你要引入的文件.&lt;/p&gt;
&lt;p&gt;  OK, 我们的angular应用已经准备好了. 接下来就是使用webpack来进行打包了.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;步骤五: 配置任务&lt;br&gt;  我们在根目录下的 &lt;strong&gt;package.json&lt;/strong&gt; 文件中的&lt;code&gt;script&lt;/code&gt; 选项中添加任务, 然他来执行webpack, 就像这样.&lt;/p&gt;
  &lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;scripts&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;test&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;echo \&quot;Error: no test specified\&quot; &amp;amp;&amp;amp; exit 1&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;bundle&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;webpack&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;  在终端中, 你输入命令: &lt;code&gt;npm run bundle&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;  稍等片刻, 打包完毕之后你会看见:&lt;/p&gt;
  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;angular-webpack@1.0.0 bundle /Users/ken/Projects/angular-webpack&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;webpack&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Hash: fa17ee9ecec0b19a73ae&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Version: webpack 1.12.12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Time: 550ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Asset Size Chunks Chunk Names&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.bundle.js 1.42 kB 0 [emitted] app&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vendor.bundle.js 1.12 MB 1 [emitted] vendor&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[0] ./app.js 82 bytes &amp;#123;0&amp;#125; [built]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[0] multi vendor 28 bytes &amp;#123;1&amp;#125; [built]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[1] ./services/index.js 145 bytes &amp;#123;0&amp;#125; [built]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[4] ./services/github-status.service.js 373 bytes &amp;#123;0&amp;#125; [built]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[5] ./controllers/index.js 147 bytes &amp;#123;0&amp;#125; [built]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[6] ./controllers/dashboard.controller.js 278 bytes &amp;#123;0&amp;#125; [built]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ 2 hidden modules&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;  在浏览器中运行应用&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt; open index.html
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基于webpack的angular开发环境就搭建结束.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.teamtreehouse.com/26017-2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;原文链接&lt;/a&gt;&lt;br&gt;翻译水平有限, 如果有看不懂的地方, 可以直接查看&lt;a href=&quot;https://github.com/kenhowardpdx/angular-webpack&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;项目源码&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最终我们的工程目录结构:&lt;/p&gt;
    
    </summary>
    
      <category term="外文翻译" scheme="http://yoursite.com/categories/%E5%A4%96%E6%96%87%E7%BF%BB%E8%AF%91/"/>
    
    
      <category term="Javascript" scheme="http://yoursite.com/tags/Javascript/"/>
    
      <category term="AngularJs" scheme="http://yoursite.com/tags/AngularJs/"/>
    
      <category term="翻译" scheme="http://yoursite.com/tags/%E7%BF%BB%E8%AF%91/"/>
    
  </entry>
  
  <entry>
    <title>Javascript 面向对象之继承的实现</title>
    <link href="http://yoursite.com/2016/05/20/javascript-extends-demo/"/>
    <id>http://yoursite.com/2016/05/20/javascript-extends-demo/</id>
    <published>2016-05-20T02:53:37.000Z</published>
    <updated>2016-05-20T02:58:20.000Z</updated>
    
    <content type="html">&lt;p&gt;Javascript 里面实现继承的代码&lt;/p&gt;
&lt;p&gt;示例代码:&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//定义Persion 类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Persion&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, age&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.age = age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Persion.prototype.hi = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;Hi my name is &quot;&lt;/span&gt; + &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name + &lt;span class=&quot;string&quot;&gt;&quot;, I&#39;m &quot;&lt;/span&gt; + &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.age + &lt;span class=&quot;string&quot;&gt;&#39; years old now.&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Persion.prototype.LEGS_NUM = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Persion.prototype.ARMS_NUM = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Persion.prototype.walk = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name + &lt;span class=&quot;string&quot;&gt;&quot; is walking...&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//定义Student 类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Student&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, age, className&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Persion.call(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, name, age);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.className = className;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//将Student类的原型指向Persion的原型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Student.prototype = &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.create(Persion.prototype);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Student.prototype.constructor = Student;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//复写Persion中的hi 方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Student.prototype.hi = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;Hi my name is &quot;&lt;/span&gt; + &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name + &lt;span class=&quot;string&quot;&gt;&quot;, I&#39;m &quot;&lt;/span&gt; + &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.age + &lt;span class=&quot;string&quot;&gt;&quot; years old now, and from &quot;&lt;/span&gt; + &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.className + &lt;span class=&quot;string&quot;&gt;&quot;.&quot;&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//定义Student中的learn 方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Student.prototype.learn = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;subject&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name + &lt;span class=&quot;string&quot;&gt;&quot; is learning &quot;&lt;/span&gt; + subject + &lt;span class=&quot;string&quot;&gt;&quot; at &quot;&lt;/span&gt; + &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.className);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//实例化Student类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; jack = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Student(&lt;span class=&quot;string&quot;&gt;&quot;Jack&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;27&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Class 3, Greade 2&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;jack.hi();	&lt;span class=&quot;comment&quot;&gt;//Hi, my name is Jack, I&#39;m 27 years old now, and from Class 3, Greade 2.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;jack.LEGS_NUM;	&lt;span class=&quot;comment&quot;&gt;// 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;jack.ARMS_NUM;	&lt;span class=&quot;comment&quot;&gt;// 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;jack.learn(&lt;span class=&quot;string&quot;&gt;&#39;math&#39;&lt;/span&gt;)  &lt;span class=&quot;comment&quot;&gt;// Jack is learning math at Class 3, Greade 2.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Javascript 里面实现继承的代码&lt;/p&gt;
&lt;p&gt;示例代码:&lt;/p&gt;
    
    </summary>
    
      <category term="代码" scheme="http://yoursite.com/categories/%E4%BB%A3%E7%A0%81/"/>
    
    
      <category term="Javascript" scheme="http://yoursite.com/tags/Javascript/"/>
    
      <category term="Demo" scheme="http://yoursite.com/tags/Demo/"/>
    
  </entry>
  
  <entry>
    <title>Drupal7模块开发 编写自动测试</title>
    <link href="http://yoursite.com/2016/03/23/drupal-module-development-2/"/>
    <id>http://yoursite.com/2016/03/23/drupal-module-development-2/</id>
    <published>2016-03-23T15:34:41.000Z</published>
    <updated>2016-05-20T02:59:59.000Z</updated>
    
    <content type="html">&lt;p&gt;在代码结构里面,有这许多种类的测试.其中两种是最受欢迎的, &lt;em&gt;单元测试&lt;/em&gt; 和 &lt;em&gt;功能测试&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;单元测试是专注于那些不连续的代码.  在面向对象的代码里,单元测试的重点是在一个对象里面的每个方法上. 在程序代码中,单元测试专注于函数,甚至偶尔在全局变量中.  其目的仅仅是为了去确认每个单元都能按照预期的职责去运行.&lt;/p&gt;
&lt;p&gt;大多数为Drupal编写的测试都不是单元测试.相反,他们是一些功能测试. 也就是说, 测试是为了验证在Drupal中插入的代码是否与预期的功能一样,并且与其他代码相吻合.  这是一个比单元测试更广泛的测试种类.  测试可以精确的测量更大的代码块的准确性.&lt;/p&gt;
&lt;p&gt;测试模块已经默认包含在Drupal7中,但是他是没有被默认启用的.一旦他启用了,你就可以在   Configuration-&amp;gt;Development 找到Testing的配置页面.&lt;/p&gt;
&lt;p&gt;测试应该存在自己的文件中,就像模块的主代码存放在 &lt;code&gt;modulename/modulename.module&lt;/code&gt;之中一样,测试文件也应该在&lt;br&gt;&lt;code&gt;modulename/modulename.test&lt;/code&gt;中,这样测试框架变会自动去检索到它&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;起步&quot;&gt;&lt;a href=&quot;#起步&quot; class=&quot;headerlink&quot; title=&quot;起步:&quot;&gt;&lt;/a&gt;起步:&lt;/h2&gt;&lt;p&gt;就像在模块里的其他文件一样,测试文件也必须被写在&lt;code&gt;.info&lt;/code&gt;文件当中.所有我们需要加入的文件都必须填写在 &lt;code&gt;.info&lt;/code&gt;文件里面的 &lt;code&gt;files&lt;/code&gt; 数组之中.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;;$Id$
name = First
description = A first module.
core = 7.x
package = Drupal 7 Development
files[] = first.module
files[] = first.test
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;每当你的模块安装了之后,Drupal都会去缓存&lt;code&gt;.info&lt;/code&gt;文件里面的内容.一旦你在&lt;code&gt;.info&lt;/code&gt;文件里面添加了一个新的项目,你就必须去重新访问一下Drupal的模块页面,来强制Drupal重新解析&lt;code&gt;.info&lt;/code&gt;文件.&lt;br&gt;(保险起见,这里建议 进入 Configuration-&amp;gt;Development-&amp;gt;Performance 中Clear all caches)&lt;/p&gt;
&lt;h2 id=&quot;编写测试部件&quot;&gt;&lt;a href=&quot;#编写测试部件&quot; class=&quot;headerlink&quot; title=&quot;编写测试部件:&quot;&gt;&lt;/a&gt;编写测试部件:&lt;/h2&gt;&lt;p&gt;大多数部件遵循下面这个简单的样本:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建一个继承DrupalWebTestCase 类&lt;/li&gt;
&lt;li&gt;添加一个getInfo() 函数&lt;/li&gt;
&lt;li&gt;在setUp() 方法里面设置一些必要的配置&lt;/li&gt;
&lt;li&gt;以单词test开始来编写一些方法&lt;/li&gt;
&lt;li&gt;在每个测试方法中,为测试的实际值来使用一个或多个声明&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;当我们在进行我们自己的测试的时候,我们将按照上面的每一步来测试.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;?php
/**
* @file
* Tests for the first module
*/
class FirstTestCase extends DrupalWebTestCase {
// Methods will go here.
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这个测试部件继承了一个叫做 DrupalWebTestCase的基类. 这个基类为测试提供了许多工具.测试案例不必要陈列或者使用核心逻辑.&lt;br&gt;出于这两种原因,每个Drupal测试必须继承这个基类,或者继承另外一个继承了这个基类的其他类.&lt;br&gt;一旦我们声明了这个类,我们就可以创建我们的第一个方法,&lt;code&gt;getInfo()&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;命名约定与类&lt;br&gt;Drupal的function命名都是以小写字母命名的,并且用下划线来分割单词,但是类和方法的命名却不是这样的.类的命名应该以大写字母开头的驼峰式写法,例如”CamelCase”,方法的命名则是以小写字母开头的驼峰试写法,例如 “camelCase”.下划线是不允许出现在类与类方法的名称当中的.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在之前,我们已经看到Drupal使用一些嵌套的数组来传递信息.例如我们之前创建的 &lt;code&gt;first_block_info()&lt;/code&gt; 方法就是这样做的.&lt;br&gt;在&lt;code&gt;DrupalWebTestCase::getInfo()&lt;/code&gt; 方法里面,同样也是返回一个关联数组.此时返回的信息就是关于这个测试的.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;?php
/**
 * @file
 * Tests for the first module
 */
class FirstTestCase extends DrupalWebTestCase {

    public function setUp() {
      parent::setUp(&amp;apos;first&amp;apos;);
    }

    public static function getInfo() {
      return array(
        &amp;apos;name&amp;apos; =&amp;gt; &amp;apos;First module block functionality&amp;apos;,
        &amp;apos;description&amp;apos; =&amp;gt; &amp;apos;Test blocks in the First module&amp;apos;,
        &amp;apos;group&amp;apos; =&amp;gt; &amp;apos;First&amp;apos;,
      );
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这个&lt;code&gt;getInfo()&lt;/code&gt;方法返回的是一个带有三个项目的数组,这三个项目分别是:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;name: 测试的名称&lt;/li&gt;
&lt;li&gt;description:关于这个测试的一句话描述&lt;/li&gt;
&lt;li&gt;grup:这个测试所属于的组&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这三个项目都是旨在为人类所读取的信息.  前面两个是纯粹的参考信息,第三个是将类似的测试罗列在相同的标题下.&lt;br&gt;&lt;code&gt;getInfo()&lt;/code&gt;函数看上去是不起眼的,但你的测试必须得包含他,也就是说,如果没有这个函数,你的测试将无法被执行 .&lt;/p&gt;
&lt;h2 id=&quot;设置测试&quot;&gt;&lt;a href=&quot;#设置测试&quot; class=&quot;headerlink&quot; title=&quot;设置测试:&quot;&gt;&lt;/a&gt;设置测试:&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;?php
/**
* @file
* Tests for the first module
*/
class FirstTestCase extends DrupalWebTestCase {
  public function setUp() {
    parent::setUp(&amp;apos;first&amp;apos;);
  }

  public function getInfo() {
    return array(
      &amp;apos;name&amp;apos; =&amp;gt; &amp;apos;First module block functionality&amp;apos;,
      &amp;apos;description&amp;apos; =&amp;gt; &amp;apos;Test blocks in the First module.&amp;apos;,
      &amp;apos;group&amp;apos; =&amp;gt; &amp;apos;First&amp;apos;,
    );
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;setUp()&lt;/code&gt;方法不是必须的,但当你一旦使用他的时候,你就必须写一行上述代码,就是如下:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;parent::setUp(&amp;apos;first&amp;apos;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这是告诉&lt;code&gt;setUp()&lt;/code&gt;方法去启用存在于&lt;code&gt;DrupalWebTestCase&lt;/code&gt;类里面的&lt;code&gt;setUp()&lt;/code&gt;方法.&lt;br&gt;这么做的目的,是为了去初始化我们要测试的模块,这也意味着我们不需要去启动我们的模块,来进行测试代码的编写.&lt;br&gt;当你在编写你的测试部件的时候,你也可以在&lt;code&gt;parent::setUp()&lt;/code&gt;请求下方编写你自己的配置信息,在之后我们将看到相关例子.&lt;/p&gt;
&lt;h2 id=&quot;编写测试方法&quot;&gt;&lt;a href=&quot;#编写测试方法&quot; class=&quot;headerlink&quot; title=&quot;编写测试方法:&quot;&gt;&lt;/a&gt;编写测试方法:&lt;/h2&gt;&lt;p&gt;测试部件的大多数的方法是测试方法,他们仅仅是用来验证模块是否正常工作.就像你看到的一样,没有任何代码中调用了这些方法.&lt;br&gt;那么简单测试是如何调用我们的方法呢?就像Drupal的钩子约定一样,任何以test开头的方法是会被测试框架自动执行.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;?php
/**
 * @file
 * Tests for the first module
 */
class FirstTestCase extends DrupalWebTestCase {
    public function setUp() {
      parent::setUp(&amp;apos;first&amp;apos;);
    }
    public static function getInfo() {
      return array(
        &amp;apos;name&amp;apos; =&amp;gt; &amp;apos;First module block functionality&amp;apos;,
        &amp;apos;description&amp;apos; =&amp;gt; &amp;apos;Test blocks in the First module&amp;apos;,
        &amp;apos;group&amp;apos; =&amp;gt; &amp;apos;First&amp;apos;,
      );
    }
    public function testBlockInfo() {
      $info = module_invoke(&amp;apos;first&amp;apos;, &amp;apos;block_info&amp;apos;);
      $this-&amp;gt;assertEqual(1, count($info),
        t(&amp;apos;Module define a block.&amp;apos;));
      $this-&amp;gt;assertTrue(isset($info[&amp;apos;list_modules&amp;apos;]),
        t(&amp;apos;Module list exists.&amp;apos;));
    }
    public function testBlockView() {
      $data = module_invoke(&amp;apos;first&amp;apos;, &amp;apos;block_view&amp;apos;,&amp;apos;list_modules&amp;apos;);
      $this-&amp;gt;assertTrue(is_array($data),
        t(&amp;apos;Block returns readerable array.&amp;apos;));
      $this-&amp;gt;assertEqual(t(&amp;apos;Enabled Modules&amp;apos;), $data[&amp;apos;subject&amp;apos;],
        t(&amp;apos;Subject is set&amp;apos;));
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;上面的代码包含了两个测试的成员方法,就像他们的名字一样,每个方法都是负责之前创建的两个区块方法的测试.&lt;br&gt;他们做了三个事情:&lt;br&gt;首先,他运行了一个叫做 &lt;code&gt;module_invoke()&lt;/code&gt;的函数,并且用&lt;code&gt;$info&lt;/code&gt;来存储了他的结果.&lt;code&gt;module_invoke()&lt;/code&gt;函数主要是用来请求特定的模块里面的特定的钩子. &lt;code&gt;module_invoke()&lt;/code&gt;方法有两个参数: 模块的名称,钩子的名称. 类似与&lt;code&gt;module_invoke(&amp;#39;first&amp;#39;,&amp;#39;block_info&amp;#39;)&lt;/code&gt;这样的请求就好比在请求&lt;code&gt;first_block_info()&lt;/code&gt;钩子,这样做的好处就是能确保他被钩子系统所挂载.为达到我们的预期,我们做了一个成对的断言. 测试框架会有效的验证这些断言,如果方法正如预期,则通过,否则失败.&lt;br&gt;我们先看看 &lt;code&gt;first_block_info()&lt;/code&gt; 测试方法&lt;br&gt;这里做了两个测试:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$this-&amp;gt;assertEqual(1, count($info),
  t(&amp;apos;Module defines a block.));
$this-&amp;gt;assertTrue(isset($info[&amp;apos;list_modules&amp;apos;]),
  t(&amp;apos;Module list exists.&amp;apos;));
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;(注意,这些代码都为了格式化,把一行分割成了两行)&lt;/p&gt;
&lt;p&gt;每个断言都有&lt;code&gt;$this-&amp;gt;assertSOMETHING($conditions,$message)&lt;/code&gt; 这样的格式,其中 &lt;code&gt;SOMETHING&lt;/code&gt;表示断言的种类,&lt;code&gt;$conditions&lt;/code&gt; 是断言满足并且可以通过的条件,&lt;code&gt;$message&lt;/code&gt;就是一个测试的描述. 在我们的第一个测试中,&lt;code&gt;1&lt;/code&gt; 与 &lt;code&gt;count($info)&lt;/code&gt; 应该是相等的.断言方法都存在于 &lt;code&gt;DrupalWebTestCase&lt;/code&gt;这个父类当中,这个类提供了十几种断言方法来使测试进行的更简单.&lt;/p&gt;
&lt;p&gt;在例子中我们的断言是这样的:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$this-&amp;gt;assertEqual():第一个值(已知)等于第二值(测试值)的断言.&lt;/li&gt;
&lt;li&gt;$this-&amp;gt;assertTrue():给定结果为TRUE的断言.&lt;br&gt;第一个断言验证了我们在block_info()钩子里面定义的block,第二个断言验证了这个block的名字是否为list_modules.&lt;br&gt;这样,当我们的测试进行的时候,我们就可以确定我们的info钩子是否返回了关于我们的简单的区块的信息.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;再看看&lt;code&gt;first_block_view()&lt;/code&gt;的测试.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public function testBlockView() {
    $data = module_invoke(&amp;apos;first&amp;apos;, &amp;apos;block_view&amp;apos;,
        &amp;apos;list_modules&amp;apos;);
    $this-&amp;gt;assertTrue(is_array($data),
        t(&amp;apos;Block returns renderable array.&amp;apos;));
    $this-&amp;gt;assertEqual(t(&amp;apos;Enabled Modules&amp;apos;), $data[&amp;apos;subject&amp;apos;],
        t(&amp;apos;Subject is set&amp;apos;));
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这次我们执行的是 &lt;code&gt;block_view()&lt;/code&gt;钩子.并且再次执行了两个断言.第一个断言确认了&lt;code&gt;first_block_view()&lt;/code&gt;返回的是否是一个数组.第二个断言验证了他的标题是否与我们预期的一样,为 &lt;code&gt;Enabled Modules&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;编写完毕,我们就可以去 Configuration-&amp;gt; Testing 里面去选中我们的测试,并且运行他了,看看结果吧,你的测试是否都通过了呢!&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在代码结构里面,有这许多种类的测试.其中两种是最受欢迎的, &lt;em&gt;单元测试&lt;/em&gt; 和 &lt;em&gt;功能测试&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;单元测试是专注于那些不连续的代码.  在面向对象的代码里,单元测试的重点是在一个对象里面的每个方法上. 在程序代码中,单元测试专注于函数,甚至偶尔在全局变量中.  其目的仅仅是为了去确认每个单元都能按照预期的职责去运行.&lt;/p&gt;
&lt;p&gt;大多数为Drupal编写的测试都不是单元测试.相反,他们是一些功能测试. 也就是说, 测试是为了验证在Drupal中插入的代码是否与预期的功能一样,并且与其他代码相吻合.  这是一个比单元测试更广泛的测试种类.  测试可以精确的测量更大的代码块的准确性.&lt;/p&gt;
&lt;p&gt;测试模块已经默认包含在Drupal7中,但是他是没有被默认启用的.一旦他启用了,你就可以在   Configuration-&amp;gt;Development 找到Testing的配置页面.&lt;/p&gt;
&lt;p&gt;测试应该存在自己的文件中,就像模块的主代码存放在 &lt;code&gt;modulename/modulename.module&lt;/code&gt;之中一样,测试文件也应该在&lt;br&gt;&lt;code&gt;modulename/modulename.test&lt;/code&gt;中,这样测试框架变会自动去检索到它&lt;/p&gt;
    
    </summary>
    
      <category term="外文翻译" scheme="http://yoursite.com/categories/%E5%A4%96%E6%96%87%E7%BF%BB%E8%AF%91/"/>
    
    
      <category term="翻译" scheme="http://yoursite.com/tags/%E7%BF%BB%E8%AF%91/"/>
    
      <category term="Drupal" scheme="http://yoursite.com/tags/Drupal/"/>
    
  </entry>
  
  <entry>
    <title>Drupal7模块开发 创建第一个模块</title>
    <link href="http://yoursite.com/2016/03/23/drupal-module-development-1/"/>
    <id>http://yoursite.com/2016/03/23/drupal-module-development-1/</id>
    <published>2016-03-23T14:00:16.000Z</published>
    <updated>2016-03-29T04:04:01.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;Drupal7模块开发 系列是 由 Drupal 7 Module Development 英文版翻译过来的, 主要用于学习drupal的模块开发. 至于翻译质量, 我只能说尽力了, 大家凑活看吧, 鄙人文字功底有限. 如果有些地方真的被我翻译到误人子弟的地步, 恳请大家指正.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;模块命名&quot;&gt;&lt;a href=&quot;#模块命名&quot; class=&quot;headerlink&quot; title=&quot;模块命名&quot;&gt;&lt;/a&gt;模块命名&lt;/h2&gt;&lt;p&gt;Drupal的模块有两个名字,人读名与机读名.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;  人读名: 是由首字母大写的且用空格分开的单词组成,例如:Views, Eldorado Superfly等等.&lt;/p&gt;
&lt;p&gt;  机读名: 是由小写字母,数字和下划线组成的字符串,且不允许有其他字母.例如上面两个模块的机读名字则应该为:views和eldorado_superfly.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;按照惯例这两个名字应该差不多,而且通常应该将大写祖母转化为小写字母.&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;模块存放位置&quot;&gt;&lt;a href=&quot;#模块存放位置&quot; class=&quot;headerlink&quot; title=&quot;模块存放位置&quot;&gt;&lt;/a&gt;模块存放位置&lt;/h2&gt;&lt;p&gt;Drupal 的自定义模块通常是用来存放在 &lt;code&gt;/sites/default/modules&lt;/code&gt; 文件夹下面, 这样做的好处是可以与标准模块分开,以便更容易找到自己没有整理的杂乱的代码.&lt;/p&gt;
&lt;p&gt;Drupal中自定义模块如果放在 &lt;code&gt;/sites/default&lt;/code&gt; 文件夹中, 只能被默认站点所加载. 这意味着, 在实践中如果把模块放在 &lt;code&gt;/sites/default/modules&lt;/code&gt; 文件夹下,根本不会加载到其他站点中. 在这种情况下, 一般会建议把自定义模块放在&lt;code&gt;/sites/all/modules/custom&lt;/code&gt; 这个文件夹下.&lt;/p&gt;
&lt;h2 id=&quot;创建模块文件夹&quot;&gt;&lt;a href=&quot;#创建模块文件夹&quot; class=&quot;headerlink&quot; title=&quot;创建模块文件夹&quot;&gt;&lt;/a&gt;创建模块文件夹&lt;/h2&gt;&lt;p&gt;模块可以以多种途径来进行组织, 但是实践证明, 最好的选择还是得将模块放在 &lt;code&gt;/sites/defualt/modules&lt;/code&gt; 文件夹下,并且模块中至少得有两个文件&lt;code&gt;a.info&lt;/code&gt;以及&lt;code&gt;a.module&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;文件夹,以及文件夹下的.info文件和.module文件,都必须以机读名的方式来命名. 且&lt;code&gt;.info&lt;/code&gt;和&lt;code&gt;.module&lt;/code&gt;文件只能被设定为只读模式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;编写.info文件&lt;br&gt;&lt;code&gt;.info&lt;/code&gt; 文件是为Drupal提供信息的文件. 其中的信息包括:模块人读名, 此模块所要请求的其他模块, 以及此模块提供了哪些代码文件.&lt;br&gt;一个&lt;code&gt;.info&lt;/code&gt;文件是一个类似于&lt;code&gt;.ini&lt;/code&gt;标准的控制文件. 在&lt;code&gt;.info&lt;/code&gt;文件中的指令是由: 名称, 等号, 值.这三个元素组成的. 例如:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;name = value
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;或者以数组的形式进行申明,例如:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;name[] = value1
name[] = value2
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;(注意,两个方括号中间没有空格)&lt;/p&gt;
&lt;p&gt;drupal的编码规范中,在等号两端通常都有一个空格符号.&lt;br&gt;如果一个值的跨度超过一行, 那他应该被包含在一个括号之中.&lt;br&gt;在drupal的ini解释器中,任何以分号开头的代码都将作为注释,被忽略掉.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;编写.module文件&lt;br&gt;&lt;code&gt;.module&lt;/code&gt; 文件一般是一个包含了模块所使用的主要的钩子的PHP文件.&lt;br&gt;下面是一个简单的help钩子的代码&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// $Id$&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@file&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * A module exemplifying Drupal coding practices and APIs.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * This module provides a block that lists all of the&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * installed modules. It illustrates coding standards,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * practices, and API use for Drupal 7.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  * Implements hook_help().&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;first_help&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;($path, $arg)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ($path == &lt;span class=&quot;string&quot;&gt;&#39;admin/help#first&#39;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; t(&lt;span class=&quot;string&quot;&gt;&#39;A demonstration module.&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在上述代码中有以下代码规范:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;所有的PHP 和 Javascript文件的都使用两格空格来进行缩进, tab是不允许使用在任何代码里.&lt;/li&gt;
&lt;li&gt;在一个完全的PHP文件代码中,通常是省略结尾部的结束标签代码 ‘?&amp;gt;’. 这是要防止夹杂着的空白来打断HTTP的标头.&lt;/li&gt;
&lt;li&gt;Drupal 是使用 Doxygen-styel风格来注释(/&lt;em&gt;* &lt;/em&gt;/)方法,类,界面,常亮,文件,全局文件的. #号是不允许使用在注释之中的.&lt;/li&gt;
&lt;li&gt;在运算符两边必须有一个空格的.&lt;/li&gt;
&lt;li&gt;所有的控制流程代码都必须包括在大括号之内.即使if的控制流程代码只有一行主体代码,也是需要用大括号包裹起来.&lt;/li&gt;
&lt;li&gt;方法的命名都是用小写字母以及下划线来分割单词.&lt;/li&gt;
&lt;li&gt;变量名是使用小写字母以及下划线来分割单词之间的空格的.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;翻译函数 &lt;code&gt;t()&lt;/code&gt; 和翻译&lt;br&gt;翻译函数必须遵循如下写法:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;t(&amp;apos;This is my string&amp;apos;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;不能以下面的方式来写:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$variable = &amp;apos;This is a string&amp;apos;;
t($variable);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这是因为t()函数, 他不执行代码, 只是读取代码.&lt;br&gt;t()函数接受一个可选参数，这是个关联数组. 例如:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$values = array(&amp;apos;@user&amp;apos; =&amp;gt; $username);
print t(&amp;apos;Welcome, @user&amp;apos;, $values);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这两行代码中,申明@user为占位符,值为变量&lt;code&gt;$username&lt;/code&gt;的值.当&lt;code&gt;t()&lt;/code&gt;函数被调用时, $values的映射将替换掉要被翻译语句中的占位符.&lt;br&gt;如果占位符使用@符号开头, 则Drupal将在插入翻译之前, 对这个值使用&lt;code&gt;check_plain()&lt;/code&gt;方法来进行过滤.&lt;br&gt;如果你确定你的字符串没有任何危险,则可以使用感叹号(!)开头来命名占位符.但这样做,drupal将直接插入这个值,而不进行过滤.这在不需要对你要插入的数据进行翻译的时候,是非常有用的. 像这样写:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$values = array(&amp;apos;!url&amp;apos; =&amp;gt; &amp;apos;http://example.com&amp;apos;);
print t(&amp;apos;The website can be found at !url&amp;apos;, $values);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;百分号开头的占位符,可以在值插入之前进行安全过滤,并且强制值为文本类型;(用em标签包围),像这样写:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$values = array(&amp;apos;%color&amp;apos; =&amp;gt; &amp;apos;blue&amp;apos;);
print t(&amp;apos;My favorite color is %color.&amp;apos;, $values);
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;a href=&quot;/2016/03/23/drupal-module-development-2/&quot; title=&quot;下一步 编写自动测试&quot;&gt;下一步 编写自动测试&lt;/a&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Drupal7模块开发 系列是 由 Drupal 7 Module Development 英文版翻译过来的, 主要用于学习drupal的模块开发. 至于翻译质量, 我只能说尽力了, 大家凑活看吧, 鄙人文字功底有限. 如果有些地方真的被我翻译到误人子弟的地步, 恳请大家指正.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;模块命名&quot;&gt;&lt;a href=&quot;#模块命名&quot; class=&quot;headerlink&quot; title=&quot;模块命名&quot;&gt;&lt;/a&gt;模块命名&lt;/h2&gt;&lt;p&gt;Drupal的模块有两个名字,人读名与机读名.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;  人读名: 是由首字母大写的且用空格分开的单词组成,例如:Views, Eldorado Superfly等等.&lt;/p&gt;
&lt;p&gt;  机读名: 是由小写字母,数字和下划线组成的字符串,且不允许有其他字母.例如上面两个模块的机读名字则应该为:views和eldorado_superfly.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;按照惯例这两个名字应该差不多,而且通常应该将大写祖母转化为小写字母.&lt;/p&gt;
    
    </summary>
    
      <category term="外文翻译" scheme="http://yoursite.com/categories/%E5%A4%96%E6%96%87%E7%BF%BB%E8%AF%91/"/>
    
    
      <category term="翻译" scheme="http://yoursite.com/tags/%E7%BF%BB%E8%AF%91/"/>
    
      <category term="Drupal" scheme="http://yoursite.com/tags/Drupal/"/>
    
  </entry>
  
</feed>
